version: '3.5'

# will contain all elasticsearch data.
volumes:
  data:

secrets:
  ca.crt:
    file: ./secrets/certificate_authority/ca/ca.crt
  elasticsearch.keystore:
    file: ./secrets/elasticsearch.keystore
  elastic-stack-ca.p12:
    file: ./secrets/certificate_authority/elastic-stack-ca.p12
  elasticsearch.key:
    file: ./secrets/certificates/es02/es02.key
  elasticsearch.cert:
    file: ./secrets/certificates/es02/es02.crt

services:
  es02:
    container_name: es02
    hostname: es02
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    environment:
      - CONFIG_DIR=${ELASTIC_DIR}/config
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic
      - node.name=es02
      - node.roles=master,data        
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - Des.discovery.zen.ping.unicast.hosts=192.168.118.98,192.168.118.123,192.168.118.100
      - Des.discovery.zen.minimum_master_nodes=3
      - Des.network.publish_host=es02
      - transport.tcp.port=9300
      - http.port=9200      
    volumes:
      - data:${ELASTIC_DIR}
      - ./elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro
    secrets:
      - source: elasticsearch.keystore
        target: ${ELASTIC_DIR}/config/elasticsearch.keystore
      - source: ca.crt
        target: ${ELASTIC_DIR}/config/ca.crt
      - source: elasticsearch.cert
        target: ${ELASTIC_DIR}/config/es02.crt
      - source: elasticsearch.key
        target: ${ELASTIC_DIR}/config/es02.key
    ports:
      - "9200:9200"
      - "9300:9300"
    extra_hosts:
      - "es01:192.168.118.100"
      - "es02:192.168.118.123"
      - "es03:192.168.118.98"        
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    network_mode: "host" 

#networks:
#  elk:
#    driver: bridge
